<Window x:Class="Client.WelcomeWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Client"
        mc:Ignorable="d"
        Title="Checkers Game" Height="500" Width="600">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="3"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Margin" Value="30,10"/>
            <Setter Property="Margin" Value="30,10"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="Background" Value="#dbbd97" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="20" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#EAB01E"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#000"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#F1CA68"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#000"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Background>
        <ImageBrush ImageSource="assets\images\background.jpg" Opacity="0.5"/>
    </Window.Background>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>

            <RowDefinition/>
        </Grid.RowDefinitions>
        <Button Name="loginBtn" Content="CONNECT" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="3" Click="loginBtn_Click" 
                Style="{DynamicResource RoundedButtonStyle}"/>
        <Button Name="registerBtn" Content="REGISTER" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="3" Click="registerBtn_Click"
                Style="{DynamicResource RoundedButtonStyle}"/>
        <Button Name="playOfflineButton" Content="PLAY OFFLINE" Grid.Column="1" Grid.Row="3" Grid.ColumnSpan="3"
                Click="playOfflineButton_Click" Style="{DynamicResource RoundedButtonStyle}"/>

        <StackPanel Visibility="Hidden" Name="tableSizeGrid" Orientation="Horizontal" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="3">
            <Label Content="size:" VerticalAlignment="Center" FontWeight="Black" FontSize="24"/>
            <Button Margin="7,12" Name="eightSizeBtn" Tag="8"  Content="8x8" Style="{DynamicResource RoundedButtonStyle}" Width="77" Click="chooseSizeTableClick"/>
            <Button Margin="6,12" Name="tenSizeBtn" Tag="10" Content="10x10" Style="{DynamicResource RoundedButtonStyle}" Width="77" Click="chooseSizeTableClick"/>
            <Button Margin="6,12" Name="backSizeBtn" Content="BACK" Style="{DynamicResource RoundedButtonStyle}" Width="77" Click="backSizeTableBtn_Click"/>
        </StackPanel>
        <StackPanel Visibility="Hidden" Name="gameLevelGrid" Orientation="Horizontal" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="3">
            <Button Margin="7,12" Name="easyBtn" Tag="Easy" Content="Easy" Style="{DynamicResource RoundedButtonStyle}" Width="77" Click="chooseLevelGameClick"/>
            <Button Margin="6,12" Name="mediumBtn" Tag="Medium" Content="Med" Style="{DynamicResource RoundedButtonStyle}" Width="77" Click="chooseLevelGameClick"/>
            <Button Margin="6,12" Name="hardBtn" Tag="Hard" Content="Hard" Style="{DynamicResource RoundedButtonStyle}" Width="77" Click="chooseLevelGameClick"/>
            <Button Margin="6,12" Name="backLevelBtn" Content="BACK" Style="{DynamicResource RoundedButtonStyle}" Width="77" Click="backLevelBtn_Click"/>
        </StackPanel>
        <StackPanel Visibility="Hidden" Name="eatModeGrid" Orientation="Horizontal" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="4" Margin="0.333,0,96.333,0">
            <Label Content="B-Mode:" VerticalAlignment="Center" FontWeight="Black" FontSize="24"/>
            <Button Margin="7,12" Name="Yes" Tag="True" Content="Yes" Style="{DynamicResource RoundedButtonStyle}" Width="77" Click="chooseEatModeClick"/>
            <Button Margin="6,12" Name="No" Tag="False" Content="No" Style="{DynamicResource RoundedButtonStyle}" Width="77" Click="chooseEatModeClick"/>
            <Button Margin="6,12" Name="backEatBtn" Content="BACK" Style="{DynamicResource RoundedButtonStyle}" Width="77" Click="backEatBtn_Click"/>
        </StackPanel>
    </Grid>

</Window>
